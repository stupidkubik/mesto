(()=>{"use strict";var __webpack_modules__={936:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n;// CONCATENATED MODULE: ./src/images/california.jpg\nconst california_namespaceObject = __webpack_require__.p + "images/california.d5650b1177220a75e637.jpg";\n;// CONCATENATED MODULE: ./src/images/france.jpg\nconst france_namespaceObject = __webpack_require__.p + "images/france.3d007c7e84dd1f6efb5b.jpg";\n;// CONCATENATED MODULE: ./src/images/iceland.jpg\nconst iceland_namespaceObject = __webpack_require__.p + "images/iceland.afcddbdd530333fad8b2.jpg";\n;// CONCATENATED MODULE: ./src/images/indonesia.jpg\nconst indonesia_namespaceObject = __webpack_require__.p + "images/indonesia.97b46d5cfb0a9b2a4250.jpg";\n;// CONCATENATED MODULE: ./src/images/thailand.jpg\nconst thailand_namespaceObject = __webpack_require__.p + "images/thailand.6a0aa58e13bbcc270aa9.jpg";\n;// CONCATENATED MODULE: ./src/images/vietnam.jpg\nconst vietnam_namespaceObject = __webpack_require__.p + "images/vietnam.58c69da159680baf3007.jpg";\n;// CONCATENATED MODULE: ./src/scripts/utils/constants.js\n\n\n\n\n\n\n\n// export const initElements = [\n//     {\n//         name: \'Индонезия\',\n//         link: indonesiaImage,\n//     },\n//     {\n//         name: \'Исландия\',\n//         link: icelandImage,\n//     },\n//     {\n//         name: \'Франция\',\n//         link: franceImage,\n//     },\n//     {\n//         name: \'Калифорния\',\n//         link: californiaImage,\n//     },\n//     {\n//         name: \'Таиланд\',\n//         link: thailandImage,\n//     },\n//     {\n//         name: \'Вьетнам\',\n//         link: vietnamImage,\n//     },\n// ]\n\nvar validationConfig = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__input\',\n  submitButtonSelector: \'.popup__submit\',\n  inactiveButtonClass: \'popup__submit_disabled\',\n  inputErrorClass: \'popup__input_type_error\',\n  errorClass: \'popup__error_visible\'\n};\n;// CONCATENATED MODULE: ./src/scripts/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(cardItem, _ref) {\n    var _this = this;\n    var cardObj = _ref.cardObj;\n    _classCallCheck(this, Card);\n    _defineProperty(this, "_toggleLike", function () {\n      _this._like.classList.contains(\'element__like-icon_active\') ? _this._removeLike() : _this._addLike();\n    });\n    _defineProperty(this, "_handleDeleteCard", function () {\n      _this._openDeletePopup.open(_this, _this._card);\n    });\n    this._card = cardItem;\n    this._templateSelector = cardObj.templateSelector;\n    this._openDeletePopup = cardObj.openDeletePopup;\n    this._myId = cardObj.myId._id;\n    this._handleCardClick = cardObj.handleCardClick;\n    this._handleLike = cardObj.handleLike;\n  }\n  _createClass(Card, [{\n    key: "_cloneTemplate",\n    value: function _cloneTemplate() {\n      return document.getElementById(this._templateSelector).content.querySelector(\'.element\').cloneNode(true);\n    }\n  }, {\n    key: "_addLike",\n    value: function () {\n      var _addLike2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var newCard;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this._handleLike(true, this._card);\n            case 3:\n              newCard = _context.sent;\n              this._like.classList.add(\'element__like-icon_active\');\n              this._likesCount.textContent = newCard.likes.length;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context["catch"](0);\n              console.error(\'Ошибка постановки лайка: \', _context.t0);\n            case 11:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n      function _addLike() {\n        return _addLike2.apply(this, arguments);\n      }\n      return _addLike;\n    }()\n  }, {\n    key: "_removeLike",\n    value: function () {\n      var _removeLike2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var newCard;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this._handleLike(false, this._card);\n            case 3:\n              newCard = _context2.sent;\n              this._like.classList.remove(\'element__like-icon_active\');\n              this._likesCount.textContent = newCard.likes.length;\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2["catch"](0);\n              console.error(\'Ошибка удаления лайка: \', _context2.t0);\n            case 11:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n      function _removeLike() {\n        return _removeLike2.apply(this, arguments);\n      }\n      return _removeLike;\n    }()\n  }, {\n    key: "_checkLikeCount",\n    value: function _checkLikeCount() {\n      var _this2 = this;\n      this._likes = this._card.likes;\n      this._likes.forEach(function (likeOwner) {\n        _this2._checkLikeStatus(likeOwner);\n      });\n      this._likesCount = this._clone.querySelector(\'.element__like-count\');\n      this._likesCount.textContent = this._likes.length;\n    }\n  }, {\n    key: "_checkLikeStatus",\n    value: function _checkLikeStatus(likeOwner) {\n      if (likeOwner._id === this._myId) {\n        this._like.classList.add(\'element__like-icon_active\');\n      }\n    }\n  }, {\n    key: "_checkCardOwnerId",\n    value: function _checkCardOwnerId() {\n      // console.log(\'my: \', this._myId)\n      // console.log(\'owner: \', this._card.owner._id)\n\n      this._myId === this._card.owner._id ? this._trash.style = \'display: block\' : this._trash.style = \'display: none\';\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard() {\n      this._clone.remove();\n      this._clone = null;\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this3 = this;\n      this._like = this._clone.querySelector(\'.element__like-icon\');\n      this._trash = this._clone.querySelector(\'.element__trash-icon\');\n      this._like.addEventListener(\'click\', this._toggleLike);\n      this._trash.addEventListener(\'click\', this._handleDeleteCard);\n      this._cardImage.addEventListener(\'click\', function () {\n        return _this3._handleCardClick(_this3._cardImage);\n      });\n    }\n  }, {\n    key: "createCard",\n    value: function createCard() {\n      this._clone = this._cloneTemplate();\n      this._cardImage = this._clone.querySelector(\'.element__image\');\n      this._cardTitle = this._clone.querySelector(\'.element__title\');\n      this._cardImage.src = this._card.link;\n      this._cardImage.alt = this._card.name;\n      this._cardTitle.textContent = this._card.name;\n      this._setEventListeners();\n      this._checkCardOwnerId();\n      this._checkLikeCount();\n      return this._clone;\n    }\n  }]);\n  return Card;\n}();\n;// CONCATENATED MODULE: ./src/scripts/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, form) {\n    FormValidator_classCallCheck(this, FormValidator);\n    this._form = document.querySelector(form);\n    this._config = config;\n    this._inputsList = Array.from(this._form.querySelectorAll(this._config.inputSelector));\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_enableButton",\n    value: function _enableButton() {\n      this._submitButton.classList.remove(this._config.inactiveButtonClass);\n      this._submitButton.removeAttribute(\'disabled\');\n    }\n  }, {\n    key: "_disableButton",\n    value: function _disableButton() {\n      this._submitButton.classList.add(this._config.inactiveButtonClass);\n      this._submitButton.setAttribute(\'disabled\', \'\');\n    }\n  }, {\n    key: "_checkButtonValidity",\n    value: function _checkButtonValidity() {\n      this._submitButton = this._form.querySelector(this._config.submitButtonSelector);\n      this._form.checkValidity() ? this._enableButton() : this._disableButton();\n    }\n  }, {\n    key: "_setFormValidity",\n    value: function _setFormValidity() {\n      var _this = this;\n      this._form.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        _this._checkButtonValidity();\n      });\n    }\n  }, {\n    key: "_setInputValid",\n    value: function _setInputValid(input) {\n      input.classList.remove(this._config.inputErrorClass);\n      this._errorElement.classList.remove(this._config.errorClass);\n      this._errorElement.textContent = \'\';\n    }\n  }, {\n    key: "_setInputInvalid",\n    value: function _setInputInvalid(input) {\n      input.classList.add(this._config.inputErrorClass);\n      this._errorElement.classList.add(this._config.errorClass);\n      this._errorElement.textContent = input.validationMessage;\n    }\n  }, {\n    key: "_checkInputValidity",\n    value: function _checkInputValidity(input) {\n      this._errorElement = document.querySelector("#error-".concat(input.id));\n      input.checkValidity() ? this._setInputValid(input) : this._setInputInvalid(input);\n    }\n  }, {\n    key: "_setInputValidity",\n    value: function _setInputValidity() {\n      var _this2 = this;\n      this._inputsList.forEach(function (input) {\n        _this2._checkButtonValidity(input);\n        input.addEventListener(\'input\', function () {\n          _this2._checkButtonValidity(input);\n          _this2._checkInputValidity(input);\n        });\n      });\n    }\n  }, {\n    key: "enableValidation",\n    value: function enableValidation() {\n      this._setInputValidity();\n      this._setFormValidity();\n    }\n  }, {\n    key: "checkValidityError",\n    value: function checkValidityError() {\n      var _this3 = this;\n      this._inputsList.forEach(function (input) {\n        _this3._errorElement = document.querySelector("#error-".concat(input.id));\n        if (!input.checkValidity()) {\n          _this3._setInputValid(input);\n        }\n      });\n    }\n  }, {\n    key: "setButtonDisabled",\n    value: function setButtonDisabled() {\n      this._disableButton();\n    }\n  }]);\n  return FormValidator;\n}();\n;// CONCATENATED MODULE: ./src/scripts/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(containerSelector, renderer) {\n    Section_classCallCheck(this, Section);\n    this._container = document.querySelector(containerSelector);\n    this._renderer = renderer;\n  }\n  Section_createClass(Section, [{\n    key: "renderCard",\n    value: function renderCard(cardData) {\n      this._addItem(this._renderer(cardData));\n    }\n  }, {\n    key: "_addItem",\n    value: function _addItem(newCard) {\n      this._container.prepend(newCard);\n    }\n  }]);\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/scripts/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_defineProperty(obj, key, value) { key = Popup_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(selector) {\n    var _this = this;\n    Popup_classCallCheck(this, Popup);\n    Popup_defineProperty(this, "_handleEscClose", function (evt) {\n      if (evt.key === \'Escape\') {\n        _this.close();\n      }\n    });\n    Popup_defineProperty(this, "_closePopupWithOverlay", function (evt) {\n      if (evt.target === evt.currentTarget) {\n        _this.close();\n      }\n    });\n    this._popup = document.querySelector(selector);\n    this._closeButton = this._popup.querySelector(\'.popup__close\');\n  }\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popup.classList.add(\'popup_opened\');\n      document.addEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove(\'popup_opened\');\n      this._popup.removeEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      this._closeButton.addEventListener(\'click\', function () {\n        return _this2.close();\n      });\n      this._popup.addEventListener(\'mousedown\', this._closePopupWithOverlay);\n    }\n  }]);\n  return Popup;\n}();\n;// CONCATENATED MODULE: ./src/scripts/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction PopupWithImage_defineProperty(obj, key, value) { key = PopupWithImage_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(selector) {\n    var _thisSuper, _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, selector);\n    PopupWithImage_defineProperty(_assertThisInitialized(_this), "open", function (item) {\n      _this._popupImage.src = item.src;\n      _this._popupImage.alt = item.alt;\n      _this._showImageDescription.textContent = item.alt;\n      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(PopupWithImage.prototype)), "open", _thisSuper).call(_thisSuper);\n    });\n    _this._popupImage = _this._popup.querySelector(\'.popup__image\');\n    _this._showImageDescription = _this._popup.querySelector(\'.popup__description\');\n    return _this;\n  }\n  return PopupWithImage_createClass(PopupWithImage);\n}(Popup);\n;// CONCATENATED MODULE: ./src/scripts/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ PopupWithForm_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == PopupWithForm_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction PopupWithForm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction PopupWithForm_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { PopupWithForm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { PopupWithForm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(selector, handleFormSubmit, handleClose) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, selector);\n    _this._handleFormSubmit = handleFormSubmit;\n    _this._handleClose = handleClose;\n    _this._form = _this._popup.querySelector(\'.popup__form\');\n    _this._inputsList = _this._form.querySelectorAll(\'.popup__input\');\n    _this._submitButton = _this._form.querySelector(\'.popup__submit\');\n    return _this;\n  }\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var inputValues = {};\n      this._inputsList.forEach(function (input) {\n        inputValues[input.name] = input.value;\n      });\n      return inputValues;\n    }\n  }, {\n    key: "setInputValues",\n    value: function setInputValues(info) {\n      this._inputsList.forEach(function (input) {\n        input.value = info[input.name];\n      });\n      return this._inputValues;\n    }\n  }, {\n    key: "_handlePopupSubmit",\n    value: function () {\n      var _handlePopupSubmit2 = PopupWithForm_asyncToGenerator( /*#__PURE__*/PopupWithForm_regeneratorRuntime().mark(function _callee(evt) {\n        var originalText;\n        return PopupWithForm_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              originalText = this._submitButton.textContent;\n              _context.prev = 2;\n              this._submitButton.textContent = \'Сохранение...\';\n              _context.next = 6;\n              return this._handleFormSubmit(this._getInputValues());\n            case 6:\n              this.close();\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context["catch"](2);\n              console.log(_context.t0);\n            case 12:\n              _context.prev = 12;\n              this._submitButton.textContent = originalText;\n              return _context.finish(12);\n            case 15:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 9, 12, 15]]);\n      }));\n      function _handlePopupSubmit(_x) {\n        return _handlePopupSubmit2.apply(this, arguments);\n      }\n      return _handlePopupSubmit;\n    }()\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener(\'submit\', function (evt) {\n        return _this2._handlePopupSubmit(evt);\n      });\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._handleClose();\n      this._form.reset();\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n;// CONCATENATED MODULE: ./src/scripts/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var titleSelector = _ref.titleSelector,\n      captionSelector = _ref.captionSelector,\n      avatarSelector = _ref.avatarSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._profileTitle = document.querySelector(titleSelector);\n    this._profileCaption = document.querySelector(captionSelector);\n    this._profileAvatar = document.querySelector(avatarSelector);\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return {\n        title: this._profileTitle.textContent,\n        caption: this._profileCaption.textContent\n      };\n    }\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(info) {\n      this._profileTitle.textContent = info["name"];\n      this._profileCaption.textContent = info["about"];\n      this._profileAvatar.src = info["avatar"];\n    }\n  }, {\n    key: "setAvatar",\n    value: function setAvatar(newAvatar) {\n      this._profileAvatar.src = newAvatar;\n    }\n  }]);\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/scripts/components/PopupWithConfirmation.js\nfunction PopupWithConfirmation_typeof(obj) { "@babel/helpers - typeof"; return PopupWithConfirmation_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithConfirmation_typeof(obj); }\nfunction PopupWithConfirmation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithConfirmation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithConfirmation_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithConfirmation_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithConfirmation_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithConfirmation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithConfirmation_toPropertyKey(arg) { var key = PopupWithConfirmation_toPrimitive(arg, "string"); return PopupWithConfirmation_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithConfirmation_toPrimitive(input, hint) { if (PopupWithConfirmation_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithConfirmation_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithConfirmation_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithConfirmation_get = Reflect.get.bind(); } else { PopupWithConfirmation_get = function _get(target, property, receiver) { var base = PopupWithConfirmation_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithConfirmation_get.apply(this, arguments); }\nfunction PopupWithConfirmation_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithConfirmation_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithConfirmation_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithConfirmation_setPrototypeOf(subClass, superClass); }\nfunction PopupWithConfirmation_setPrototypeOf(o, p) { PopupWithConfirmation_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithConfirmation_setPrototypeOf(o, p); }\nfunction PopupWithConfirmation_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithConfirmation_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithConfirmation_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithConfirmation_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithConfirmation_possibleConstructorReturn(this, result); }; }\nfunction PopupWithConfirmation_possibleConstructorReturn(self, call) { if (call && (PopupWithConfirmation_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithConfirmation_assertThisInitialized(self); }\nfunction PopupWithConfirmation_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithConfirmation_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithConfirmation_getPrototypeOf(o) { PopupWithConfirmation_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithConfirmation_getPrototypeOf(o); }\n\nvar PopupWithConfirmation = /*#__PURE__*/function (_Popup) {\n  PopupWithConfirmation_inherits(PopupWithConfirmation, _Popup);\n  var _super = PopupWithConfirmation_createSuper(PopupWithConfirmation);\n  function PopupWithConfirmation(selector, handleFormSubmit) {\n    var _this;\n    PopupWithConfirmation_classCallCheck(this, PopupWithConfirmation);\n    _this = _super.call(this, selector);\n    _this._handleFormSubmit = handleFormSubmit;\n    _this._form = _this._popup.querySelector(\'.popup__form\');\n    return _this;\n  }\n  PopupWithConfirmation_createClass(PopupWithConfirmation, [{\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirmation.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        _this2._handleFormSubmit(_this2._domElement, _this2._item);\n      });\n    }\n  }, {\n    key: "open",\n    value: function open(domElement, item) {\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirmation.prototype), "open", this).call(this);\n      this._domElement = domElement;\n      this._item = item;\n    }\n  }]);\n  return PopupWithConfirmation;\n}(Popup);\n;// CONCATENATED MODULE: ./src/scripts/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ Api_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == Api_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction Api_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(_ref) {\n    var baseUrl = _ref.baseUrl,\n      headers = _ref.headers;\n    Api_classCallCheck(this, Api);\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  Api_createClass(Api, [{\n    key: "getId",\n    value: function () {\n      var _getId = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee() {\n        var idData;\n        return Api_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch("".concat(this._baseUrl, "/users/me"), {\n                method: \'GET\',\n                headers: this._headers\n              });\n            case 3:\n              idData = _context.sent;\n              return _context.abrupt("return", idData.json());\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              console.error(\'Ошибка получения ID: \', _context.t0);\n            case 10:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function getId() {\n        return _getId.apply(this, arguments);\n      }\n      return getId;\n    }()\n  }, {\n    key: "getCards",\n    value: function () {\n      var _getCards = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee2() {\n        var cardsData;\n        return Api_regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch("".concat(this._baseUrl, "/cards"), {\n                method: \'GET\',\n                headers: this._headers\n              });\n            case 3:\n              cardsData = _context2.sent;\n              return _context2.abrupt("return", cardsData.json());\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2["catch"](0);\n              console.error(\'Ошибка получения списка карточек: \', _context2.t0);\n            case 10:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function getCards() {\n        return _getCards.apply(this, arguments);\n      }\n      return getCards;\n    }()\n  }, {\n    key: "postCard",\n    value: function () {\n      var _postCard = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee3(cardData) {\n        var newCardData;\n        return Api_regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch("".concat(this._baseUrl, "/cards"), {\n                method: \'POST\',\n                headers: this._headers,\n                body: JSON.stringify({\n                  name: cardData.title,\n                  link: cardData.link\n                })\n              });\n            case 3:\n              newCardData = _context3.sent;\n              return _context3.abrupt("return", newCardData.json());\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3["catch"](0);\n              console.error(\'Ошибка отправки новой карточки : \', _context3.t0);\n            case 10:\n            case "end":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n      function postCard(_x) {\n        return _postCard.apply(this, arguments);\n      }\n      return postCard;\n    }()\n  }, {\n    key: "updateProfile",\n    value: function () {\n      var _updateProfile = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee4(inputValues) {\n        var newProfileData;\n        return Api_regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return fetch("".concat(this._baseUrl, "/users/me"), {\n                method: \'PATCH\',\n                headers: this._headers,\n                body: JSON.stringify({\n                  name: inputValues.title,\n                  about: inputValues.caption\n                })\n              });\n            case 3:\n              newProfileData = _context4.sent;\n              return _context4.abrupt("return", newProfileData.json());\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4["catch"](0);\n              console.error(\'Ошибка обновления данных профиля: \', _context4.t0);\n            case 10:\n            case "end":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n      function updateProfile(_x2) {\n        return _updateProfile.apply(this, arguments);\n      }\n      return updateProfile;\n    }()\n  }, {\n    key: "updateAvatar",\n    value: function () {\n      var _updateAvatar = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee5(inputValue) {\n        var newAvatar;\n        return Api_regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return fetch("".concat(this._baseUrl, "/users/me/avatar"), {\n                method: \'PATCH\',\n                headers: this._headers,\n                body: JSON.stringify({\n                  avatar: inputValue.avatar\n                })\n              });\n            case 3:\n              newAvatar = _context5.sent;\n              return _context5.abrupt("return", newAvatar.json());\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5["catch"](0);\n              console.error(\'Ошибка обновления аватара: \', _context5.t0);\n            case 10:\n            case "end":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n      function updateAvatar(_x3) {\n        return _updateAvatar.apply(this, arguments);\n      }\n      return updateAvatar;\n    }()\n  }, {\n    key: "putLike",\n    value: function () {\n      var _putLike = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee6(cardId) {\n        var countLike;\n        return Api_regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return fetch("".concat(this._baseUrl, "/cards/").concat(cardId, "/likes"), {\n                method: \'PUT\',\n                headers: this._headers\n              });\n            case 3:\n              countLike = _context6.sent;\n              return _context6.abrupt("return", countLike.json());\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6["catch"](0);\n              console.error(\'Ошибка сервера при постановке лайка: \', _context6.t0);\n            case 10:\n            case "end":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n      function putLike(_x4) {\n        return _putLike.apply(this, arguments);\n      }\n      return putLike;\n    }()\n  }, {\n    key: "deleteLike",\n    value: function () {\n      var _deleteLike = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee7(cardId) {\n        var countLike;\n        return Api_regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return fetch("".concat(this._baseUrl, "/cards/").concat(cardId, "/likes"), {\n                method: \'DELETE\',\n                headers: this._headers\n              });\n            case 3:\n              countLike = _context7.sent;\n              return _context7.abrupt("return", countLike.json());\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7["catch"](0);\n              console.error(\'Ошибка сервера при удалении лайка: \', _context7.t0);\n            case 10:\n            case "end":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n      function deleteLike(_x5) {\n        return _deleteLike.apply(this, arguments);\n      }\n      return deleteLike;\n    }()\n  }, {\n    key: "deleteCard",\n    value: function () {\n      var _deleteCard = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee8(cardId) {\n        var cardDelete;\n        return Api_regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return fetch("".concat(this._baseUrl, "/cards/").concat(cardId), {\n                method: \'DELETE\',\n                headers: this._headers\n              });\n            case 3:\n              cardDelete = _context8.sent;\n              return _context8.abrupt("return", cardDelete.json());\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8["catch"](0);\n              console.error(\'Ошибка удаления карточки: \', _context8.t0);\n            case 10:\n            case "end":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 7]]);\n      }));\n      function deleteCard(_x6) {\n        return _deleteCard.apply(this, arguments);\n      }\n      return deleteCard;\n    }()\n  }]);\n  return Api;\n}();\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction pages_typeof(obj) { "@babel/helpers - typeof"; return pages_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, pages_typeof(obj); }\nfunction pages_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ pages_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == pages_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction pages_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { pages_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n// Подключение файлов стилей и скриптов\n\n\n\n\n\n\n\n\n\n\n\n\n// Ищем кнопки открытия попапов\n\nvar popupProfileOpenButton = document.querySelector(\'.profile__edit\');\nvar popupCardOpenButton = document.querySelector(\'.profile__add-element\');\nvar popupAvatarOpenButton = document.querySelector(\'.profile__avatar-edit\');\n\n// Запускаем валидацию\n\nvar popupProfileFormValidator = new FormValidator(validationConfig, \'.popup__form_profile\');\nvar popupCardFormValidator = new FormValidator(validationConfig, \'.popup__form_card\');\nvar popupAvatarFormValidator = new FormValidator(validationConfig, \'.popup__form_avatar\');\npopupProfileFormValidator.enableValidation();\npopupCardFormValidator.enableValidation();\npopupAvatarFormValidator.enableValidation();\n\n// Загружаем начальные данные с API\n\nvar api = new Api({\n  baseUrl: \'https://mesto.nomoreparties.co/v1/cohort-68\',\n  headers: {\n    authorization: \'cad6e116-edab-4c4b-8149-8b724d78ff63\',\n    \'Content-Type\': \'application/json\'\n  }\n});\nvar myId = {}; // Создаем объект для данных профиля\n\nPromise.all([api.getCards(),\n// Запрашиваем массив карточек с сервера\napi.getId() // Запрашиваем данные юзера\n]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    cards = _ref2[0],\n    user = _ref2[1];\n  myId = user; // наполняем объект свойствами\n  cards.reverse().forEach(function (card) {\n    return cardsList.renderCard(card);\n  });\n  userInfo.setUserInfo(user);\n});\n\n// Создаем экземпляры классов\n\nvar popupDelete = new PopupWithConfirmation(\'.popup_type_delete\', /*#__PURE__*/function () {\n  var _ref3 = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee(cardElement, card) {\n    return pages_regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return api.deleteCard(card._id);\n        case 2:\n          cardElement.deleteCard();\n          popupDelete.close();\n        case 4:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar popupImage = new PopupWithImage(\'.popup_type_image\');\nvar userInfo = new UserInfo({\n  titleSelector: \'.profile__name\',\n  captionSelector: \'.profile__caption\',\n  avatarSelector: \'.profile__avatar\'\n});\nvar popupProfile = new PopupWithForm(\'.popup_type_profile\', /*#__PURE__*/function () {\n  var _ref4 = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee2(inputValues) {\n    var info;\n    return pages_regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return api.updateProfile(inputValues);\n        case 2:\n          info = _context2.sent;\n          userInfo.setUserInfo(info);\n        case 4:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}(), function () {\n  return popupProfileFormValidator.checkValidityError();\n});\nvar popupCard = new PopupWithForm(\'.popup_type_add\', /*#__PURE__*/function () {\n  var _ref5 = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee3(inputValues) {\n    var card;\n    return pages_regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return api.postCard(inputValues);\n        case 2:\n          card = _context3.sent;\n          cardsList.renderCard(card);\n        case 4:\n        case "end":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}(), function () {\n  return popupCardFormValidator.checkValidityError();\n});\nvar popupAvatar = new PopupWithForm(\'.popup_type_avatar\', /*#__PURE__*/function () {\n  var _ref6 = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee4(inputValue) {\n    var info;\n    return pages_regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return api.updateAvatar(inputValue);\n        case 2:\n          info = _context4.sent;\n          userInfo.setAvatar(info.avatar);\n        case 4:\n        case "end":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function (_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}(), function () {\n  return popupAvatarFormValidator.checkValidityError();\n});\nvar cardObj = {\n  templateSelector: \'element\',\n  openDeletePopup: popupDelete,\n  myId: myId,\n  handleCardClick: function handleCardClick(card) {\n    // Функция открытия фото в попапе\n    popupImage.open(card);\n  },\n  handleLike: function () {\n    var _handleLike = pages_asyncToGenerator( /*#__PURE__*/pages_regeneratorRuntime().mark(function _callee5(notLiked, card) {\n      return pages_regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            if (!notLiked) {\n              _context5.next = 7;\n              break;\n            }\n            _context5.next = 4;\n            return api.putLike(card._id);\n          case 4:\n            return _context5.abrupt("return", _context5.sent);\n          case 7:\n            _context5.next = 9;\n            return api.deleteLike(card._id);\n          case 9:\n            return _context5.abrupt("return", _context5.sent);\n          case 10:\n            _context5.next = 15;\n            break;\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5["catch"](0);\n            console.log(_context5.t0);\n          case 15:\n          case "end":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 12]]);\n    }));\n    function handleLike(_x7, _x8) {\n      return _handleLike.apply(this, arguments);\n    }\n    return handleLike;\n  }()\n};\nvar cardsList = new Section(\'.elements__list\', function (cardItem) {\n  var newCard = new Card(cardItem, {\n    cardObj: cardObj\n  });\n  return newCard.createCard();\n});\n\n// Добавляем слушатели\n\npopupImage.setEventListeners();\npopupProfile.setEventListeners();\npopupCard.setEventListeners();\npopupAvatar.setEventListeners();\npopupDelete.setEventListeners();\nfunction handlePopupProfile() {\n  // Обрабатываем открытие попапа профиля\n  popupProfileFormValidator.setButtonDisabled();\n  popupProfile.setInputValues(userInfo.getUserInfo());\n  popupProfile.open();\n}\nfunction handlePopupCard() {\n  // Обрабатываем открытие попапа карточки\n  popupCardFormValidator.setButtonDisabled();\n  popupCard.open();\n}\nfunction handlePopupAvatar() {\n  // Обрабатываем открытие попапа с аватаром\n  popupAvatarFormValidator.setButtonDisabled();\n  popupAvatar.open();\n}\n// Добавляем обработчики открытия попапов\n\npopupProfileOpenButton.addEventListener(\'click\', handlePopupProfile);\npopupCardOpenButton.addEventListener(\'click\', handlePopupCard);\npopupAvatarOpenButton.addEventListener(\'click\', handlePopupAvatar);\n\n// for(let i = 0; i < 30; i++) {\n//     api.postCard({ title: `Фото №${i}`, link: \'https://picsum.photos/800/800\' })\n//     .then((card) => {\n//         cardsList.renderCard(card);\n//     }) \n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///936\n')}},__webpack_require__={p:""},__webpack_exports__={};__webpack_modules__[936](0,__webpack_exports__,__webpack_require__)})();